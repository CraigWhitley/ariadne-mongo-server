type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  accessToken: String
  blacklist: [Permission]
  roles: [Role!]!
}

input UserRoleInput {
    userId: String!
    roleId: String!
}

extend type Query {
    allUsers(skip: Int!, take: Int!): [User!]!
    findUserByEmail(email: String!):User
}

extend type Mutation {
    addRoleToUser(data: UserRoleInput!): User
}
